"'Loading Screen' As screen":
    BackgroundImage: =
    Fill: |-
        =// READ ME FIRST
        /*
        Welcome the the Employee Ideas app! Please see the App OnStart property for an introduction to the app.
        */
        
        // Non-variable colors, while variable is established
        Switch(
            Param("theme"),
            "contrast",
            Color.Black,
            "dark",
            ColorValue("#201F1E"), // NeutralWebGray180
            ColorValue("#F3F2F1") // NeutralWebGray20
        )
    ImagePosition: =ImagePosition.Center
    LoadingSpinner: =LoadingSpinner.Data
    LoadingSpinnerColor: |
        =// Non-variable colors, while variable is established
        Switch(
            Param("theme"),
            "contrast",
            Color.White,
            "dark",
            ColorValue("#7A7FEA"), // TeamsDarkPrimary
            ColorValue("#6264A7") // Teams Default Primary
        )
    OnVisible: |-
        =/* PLEASE READ
        The function below will set App Styling variables.
        Before editing, PLEASE copy this formula into a save place for reference.
        The primary variables are:
        [gblAppColors]
        Uses the Fluent UI palette to make Teams/MSFT oriented colors easily available in the app
        Many of these can be found here: https://developer.microsoft.com/en-us/fluentui#/styles/web/colors/products
        [gblAppStyles]
        For common controls, a styling variable has been defined.
        This allows controls to be dynamically themed, based on Teams.
        It also allows you to edit the styling properties for all/most controls of that type, for the entire app.
        */
        // App Setting Variables
        Concurrent(
            Set(
                gblAppSetting_inputMobileOnWeb,
                // Use this for mobile-oriented apps, running in desktop, to scale fonts
                false
                /*
                (Param("hostClientType") in [
                    "web",
                    "desktop"
                ]) Or (Param("hostClientType") = "ios" And App.Width > 800)
                */
            ),
            Set(
                gblAppSetting_inputMobile,
                // Use this for mobile-oriented apps, which are setup as phone apps, to scale fonts
                false
                /*
                Not(
                    Param("hostClientType") in [
                        "web",
                        "desktop"
                    ]
                ) Or (Param("hostClientType") = "ios" And App.Width < 640)
                */
            ),
            Set(
                gblAppSetting_inputScaleFontsBy,
                // Use this for scaling all fonts by a fixed amount
                0
            ),
            Set(
                gblThemeDark,
                Param("theme") = "dark"// Or (tglAdmin_DarkMode.Value)// Enable for Studio
            ),
            Set(
                gblThemeHiCo,
                Param("theme") = "contrast" Or (tglAdmin_ContrastMode.Value)// Enable for Studio
            )
        );
        // Set Color Variable
        Set(
            gblAppColors,
            {
                // Fluent Design Colors
                BackgroundDark: ColorValue("#2d2c2c"),
                BackgroundDefault: ColorValue("#F3F2F1"),
                BackgroundHighContrast: ColorValue("#000000"),
                HighContrastBackground: ColorValue("#000000"),
                HighContrastDisabled: ColorValue("#2EF149"),
                HighContrastHyperlinks: ColorValue("#FFFD39"),
                HighContrastSelectedBackground: ColorValue("#00EBFD"),
                HighContrastSelectedText: ColorValue("#000000"),
                HighContrastText: ColorValue("#FFFFFF"),
                MessagesDarkWebErrorBlock: ColorValue("#442726"),
                MessagesDarkWebErrorBlockIcon: ColorValue("#F1707B"),
                MessagesDarkWebSevereWarning: ColorValue("#4F2A0F"),
                MessagesDarkWebSevereWarningIcon: ColorValue("#FCE100"),
                MessagesDarkWebSuccess: ColorValue("#393D1B"),
                MessagesDarkWebSuccessIcon: ColorValue("#92C353"),
                MessagesDarkWebWarning: ColorValue("#433519"),
                MessagesDarkWebWarningIcon: ColorValue("#C8C6C4"),
                MessagesDefaultWebErrorBlock: ColorValue("#fde7e9"),
                MessagesDefaultWebErrorBlockIcon: ColorValue("#a80000"),
                MessagesDefaultWebSevereWarning: ColorValue("#fed9cc"),
                MessagesDefaultWebSevereWarningIcon: ColorValue("#d83b01"),
                MessagesDefaultWebSuccess: ColorValue("#dff6dd"),
                MessagesDefaultWebSuccessIcon: ColorValue("#107c10"),
                MessagesDefaultWebWarning: ColorValue("#fff4ce"),
                MessagesDefaultWebWarningIcon: ColorValue("#797673"),
                NeutralMobileBlack: ColorValue("#000000"),
                NeutralMobileGray100: ColorValue("#E1E1E1"),
                NeutralMobileGray200: ColorValue("#C8C8C8"),
                NeutralMobileGray25: ColorValue("#F8F8F8"),
                NeutralMobileGray300: ColorValue("#ACACAC"),
                NeutralMobileGray400: ColorValue("#919191"),
                NeutralMobileGray50: ColorValue("#F1F1F1"),
                NeutralMobileGray500: ColorValue("#6E6E6E"),
                NeutralMobileGray600: ColorValue("#404040"),
                NeutralMobileGray700: ColorValue("#303030"),
                NeutralMobileGray800: ColorValue("#292929"),
                NeutralMobileGray900: ColorValue("#212121"),
                NeutralMobileGray950: ColorValue("#141414"),
                NeutralMobileWhite: ColorValue("#FFFFFF"),
                NeutralWebBlack: ColorValue("#000000"),
                NeutralWebGray10: ColorValue("#FAF9F8"),
                NeutralWebGray100: ColorValue("#979593"),
                NeutralWebGray110: ColorValue("#8A8886"),
                NeutralWebGray120: ColorValue("#797775"),
                NeutralWebGray130: ColorValue("#605E5C"),
                NeutralWebGray140: ColorValue("#484644"),
                NeutralWebGray150: ColorValue("#3B3A39"),
                NeutralWebGray160: ColorValue("#323130"),
                NeutralWebGray170: ColorValue("#292827"),
                NeutralWebGray180: ColorValue("#252423"),
                NeutralWebGray190: ColorValue("#201f1e"),
                NeutralWebGray20: ColorValue("#F3F2F1"),
                NeutralWebGray200: ColorValue("#1B1A19"),
                NeutralWebGray210: ColorValue("#161514"),
                NeutralWebGray220: ColorValue("#11100F"),
                NeutralWebGray30: ColorValue("#EDEBE9"),
                NeutralWebGray40: ColorValue("#E1DFDD"),
                NeutralWebGray50: ColorValue("#D2D0CE"),
                NeutralWebGray60: ColorValue("#C8C6C4"),
                NeutralWebGray70: ColorValue("#BEBBB8"),
                NeutralWebGray80: ColorValue("#B3B0AD"),
                NeutralWebGray90: ColorValue("#A19F9D"),
                NeutralWebWhite: ColorValue("#FFFFFF"),
                OverlayTransparent: RGBA(
                    0,
                    0,
                    0,
                    0
                ),
                OverlayLight: RGBA(
                    255,
                    255,
                    255,
                    0.75
                ),
                OverlayDark: RGBA(
                    0,
                    0,
                    0,
                    0.75
                ),
                TeamsDarkPrimary: ColorValue("#7A7FEA"),
                TeamsDarkShade10: ColorValue("#8C90F4"),
                TeamsDarkShade20: ColorValue("#9EA2FF"),
                TeamsDarkShade30: ColorValue("#BCBDFF"),
                TeamsDarkTint10: ColorValue("#6264A7"),
                TeamsDarkTint20: ColorValue("#4E4E86"),
                TeamsDarkTint30: ColorValue("#3F3E5D"),
                TeamsDarkTint40: ColorValue("#373644"),
                TeamsDefaultPrimary: ColorValue("#6264A7"),
                TeamsDefaultShade10: ColorValue("#464775"),
                TeamsDefaultShade20: ColorValue("#33344A"),
                TeamsDefaultTint10: ColorValue("#888CC7"),
                TeamsDefaultTint20: ColorValue("#A6A7DC"),
                TeamsDefaultTint30: ColorValue("#BDBDE6"),
                TeamsDefaultTint40: ColorValue("#E2E2F6"),
                TeamsDefaultTint50: ColorValue("#F4F4FC")
            }
        );
        // Set Sizes Variable
        Set(
            gblAppSizes,
            {
                Padding: {Page: 20},
                Font: {
                    Small: If(
                        gblAppSetting_inputMobileOnWeb,
                        18,
                        gblAppSetting_inputMobile,
                        11,
                        9
                    ) + gblAppSetting_inputScaleFontsBy,
                    Medium: If(
                        gblAppSetting_inputMobileOnWeb,
                        20,
                        gblAppSetting_inputMobile,
                        15,
                        10.5
                    ) + gblAppSetting_inputScaleFontsBy,
                    Large: If(
                        gblAppSetting_inputMobileOnWeb,
                        22,
                        gblAppSetting_inputMobile,
                        18,
                        15
                    ) + gblAppSetting_inputScaleFontsBy,
                    ExtraLarge: If(
                        gblAppSetting_inputMobileOnWeb,
                        25,
                        gblAppSetting_inputMobile,
                        22,
                        18
                    ) + gblAppSetting_inputScaleFontsBy
                }
            }
        );
        // Set Styles Variable
        Set(
            gblAppStyles,
            {
                Background: {
                    Fill: If(
                        gblThemeHiCo,
                        gblAppColors.BackgroundHighContrast,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray190,
                        gblAppColors.BackgroundDefault
                    )
                },
                Dialogs: {
                    Fill: If(
                        gblThemeHiCo,
                        Color.Transparent,
                        gblThemeDark,
                        RGBA(
                            255,
                            255,
                            255,
                            .75
                        ),
                        RGBA(
                            0,
                            0,
                            0,
                            .75
                        )
                    )
                },
                Dividers: {
                    TopMenu: If(
                        gblThemeHiCo,
                        Color.White,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray40
                    ),
                    Elements: If(
                        gblThemeHiCo,
                        Color.White,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray40
                    ),
                    Background: If(
                        gblThemeHiCo,
                        Color.White,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray100,
                        gblAppColors.NeutralWebGray40
                    )
                },
                Gallery: {
                    SelectedItem: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDarkTint30,
                        gblAppColors.TeamsDefaultTint40
                    ),
                    SelectedItemDisabled: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.TeamsDarkTint40,
                        gblAppColors.TeamsDefaultTint50
                    ),
                    Fill: Color.Transparent,
                    HoverFill: If(
                        gblThemeHiCo,
                        Color.Transparent,
                        gblThemeDark,
                        RGBA(
                            255,
                            255,
                            255,
                            .06
                        ),
                        RGBA(
                            128,
                            128,
                            128,
                            .06
                        )
                    ),
                    PressedFill: If(
                        gblThemeHiCo,
                        Color.Transparent,
                        gblThemeDark,
                        RGBA(
                            255,
                            255,
                            255,
                            .12
                        ),
                        RGBA(
                            128,
                            128,
                            128,
                            .12
                        )
                    )
                },
                Icons: {
                    Color: If(
                        gblThemeHiCo,
                        "FFFD39",
                        gblThemeDark,
                        "7A7FEA",
                        "6264A7"
                    ),
                    DisabledColor: If(
                        gblThemeHiCo,
                        "2EF149",
                        gblThemeDark,
                        "797775",
                        "605E5C"
                    ),
                    Fill_Category: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDarkTint30,
                        gblAppColors.TeamsDefaultTint50
                    ),
                    DisabledFill_Category: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray60,
                        gblAppColors.NeutralWebGray50
                    ),
                    Color_Search: If(
                        gblThemeHiCo,
                        "FFFD39",
                        gblThemeDark,
                        "7A7FEA",
                        "6264A7"
                    ),
                    DisabledColor_Search: If(
                        gblThemeHiCo,
                        "2EF149",
                        gblThemeDark,
                        "979593",
                        "323130"
                    ),
                    Color_Green: If(
                        gblThemeHiCo,
                        "FFFFFF",
                        gblThemeDark,
                        "92C353",
                        "107c10"
                    ),
                    Color_Red: If(
                        gblThemeHiCo,
                        "FFFFFF",
                        gblThemeDark,
                        "F1707B",
                        "d83b01"
                    ),
                    Color_Yellow: If(
                        gblThemeHiCo,
                        "FFFFFF",
                        gblThemeDark,
                        "FCE100",
                        "FCE100"
                    ),
                    Color_Gray: If(
                        gblThemeHiCo,
                        "FFFFFF",
                        gblThemeDark,
                        "797775",
                        "252423"
                    )
                },
                ButtonPrimary: {
                    BorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.TeamsDarkTint10,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    BorderThickness: If(
                        gblThemeHiCo,
                        4,
                        gblThemeDark,
                        0,
                        0
                    ),
                    Color: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebWhite
                    ),
                    DisabledBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    DisabledColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray60
                    ),
                    DisabledFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    Fill: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.TeamsDarkTint10,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    FocusedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDarkTint10,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    FocusedBorderThickness: If(
                        gblThemeHiCo,
                        4,
                        gblThemeDark,
                        1.5,
                        1.5
                    ),
                    HoverBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.TeamsDefaultTint10,
                        gblAppColors.TeamsDefaultShade10
                    ),
                    HoverColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebWhite
                    ),
                    HoverFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.TeamsDefaultTint10,
                        gblAppColors.TeamsDefaultShade10
                    ),
                    PressedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDefaultShade10,
                        gblAppColors.TeamsDefaultShade20
                    ),
                    PressedColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebWhite
                    ),
                    PressedFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDefaultShade10,
                        gblAppColors.TeamsDefaultShade20
                    ),
                    RadiusBottomLeft: If(
                        gblAppSetting_inputMobile,
                        5,
                        2
                    ),
                    RadiusBottomRight: If(
                        gblAppSetting_inputMobile,
                        5,
                        2
                    ),
                    RadiusTopLeft: If(
                        gblAppSetting_inputMobile,
                        5,
                        2
                    ),
                    RadiusTopRight: If(
                        gblAppSetting_inputMobile,
                        5,
                        2
                    ),
                    Size: If(
                        gblAppSetting_inputMobile,
                        gblAppSizes.Font.Large,
                        gblAppSizes.Font.Medium
                    )
                },
                ButtonSecondary: {
                    BorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray40
                    ),
                    BorderThickness: If(
                        gblThemeHiCo,
                        2,
                        gblThemeDark,
                        1,
                        0.5
                    ),
                    Color: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray180
                    ),
                    DisabledBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    DisabledColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray60
                    ),
                    DisabledFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    Fill: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray160,
                        gblAppColors.NeutralWebWhite
                    ),
                    FocusedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray60,
                        gblAppColors.NeutralWebGray40
                    ),
                    FocusedBorderThickness: If(
                        gblThemeHiCo,
                        2,
                        gblThemeDark,
                        1.5,
                        1.5
                    ),
                    HoverBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray60
                    ),
                    HoverColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    HoverFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    PressedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray60
                    ),
                    PressedColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    PressedFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray140,
                        gblAppColors.NeutralWebGray40
                    ),
                    RadiusBottomLeft: If(
                        gblAppSetting_inputMobile,
                        5,
                        2
                    ),
                    RadiusBottomRight: If(
                        gblAppSetting_inputMobile,
                        5,
                        2
                    ),
                    RadiusTopLeft: If(
                        gblAppSetting_inputMobile,
                        5,
                        2
                    ),
                    RadiusTopRight: If(
                        gblAppSetting_inputMobile,
                        5,
                        2
                    ),
                    Size: gblAppSizes.Font.Medium
                },
                ButtonBackground: {
                    BorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray50
                    ),
                    BorderThickness: If(
                        gblThemeHiCo,
                        1,
                        gblThemeDark,
                        1.5,
                        1.5
                    ),
                    Color: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    DisabledBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralMobileWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    DisabledColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray60
                    ),
                    DisabledFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray10
                    ),
                    Fill: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebWhite
                    ),
                    FocusedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray60,
                        gblAppColors.NeutralWebGray40
                    ),
                    FocusedBorderThickness: If(
                        gblThemeHiCo,
                        1,
                        gblThemeDark,
                        1,
                        1
                    ),
                    HoverBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray60
                    ),
                    HoverColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    HoverFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    PressedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray60
                    ),
                    PressedColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    PressedFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray140,
                        gblAppColors.NeutralWebGray40
                    ),
                    RadiusBottomLeft: 5,
                    RadiusBottomRight: 5,
                    RadiusTopLeft: 5,
                    RadiusTopRight: 5,
                    Size: 0
                },
                ButtonTransparent: {
                    BorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    BorderThickness: If(
                        gblThemeHiCo,
                        0,
                        gblThemeDark,
                        0,
                        0
                    ),
                    Color: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray180
                    ),
                    DisabledBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayDark,
                        gblAppColors.OverlayLight
                    ),
                    DisabledColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray100,
                        gblAppColors.NeutralWebGray100
                    ),
                    DisabledFill: Color.Transparent,
                    Fill: Color.Transparent,
                    FocusedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDarkPrimary,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    FocusedBorderThickness: If(
                        gblThemeHiCo,
                        1,
                        gblThemeDark,
                        0.1,
                        0.1
                    ),
                    HoverBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    HoverColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDarkTint10,
                        gblAppColors.TeamsDefaultShade10
                    ),
                    HoverFill: Color.Transparent,
                    PressedBorderColor: Color.Transparent,
                    PressedColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDefaultShade10,
                        gblAppColors.TeamsDefaultShade20
                    ),
                    PressedFill: Color.Transparent,
                    RadiusBottomLeft: 2,
                    RadiusBottomRight: 2,
                    RadiusTopLeft: 2,
                    RadiusTopRight: 2,
                    Size: gblAppSizes.Font.Medium
                },
                Checkbox: {
                    BorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    BorderThickness: If(
                        gblThemeHiCo,
                        2,
                        gblThemeDark,
                        1.5,
                        1.5
                    ),
                    CheckboxBackgroundFill: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.BackgroundDark,
                        gblAppColors.NeutralWebWhite
                    ),
                    CheckboxBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.TeamsDarkTint10,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    CheckmarkFill: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    Color: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    DisabledBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    DisabledColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray60
                    ),
                    DisabledFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    Fill: Color.Transparent,
                    FocusedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDarkTint10,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    FocusedBorderThickness: If(
                        gblThemeHiCo,
                        2,
                        gblThemeDark,
                        1,
                        1
                    ),
                    HoverBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.TeamsDarkTint10,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    HoverColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray180
                    ),
                    HoverFill: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    PressedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    PressedColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    PressedFill: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    Size: gblAppSizes.Font.Medium
                },
                Dropdown: {
                    BorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray180,
                        gblAppColors.NeutralWebWhite
                    ),
                    BorderThickness: If(
                        gblThemeHiCo,
                        1,
                        gblThemeDark,
                        1,
                        1
                    ),
                    ChevronBackground: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray220,
                        gblAppColors.NeutralWebWhite
                    ),
                    ChevronDisabledBackground: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray130
                    ),
                    ChevronDisabledFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray80,
                        gblAppColors.NeutralWebGray80
                    ),
                    ChevronFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray130
                    ),
                    ChevronHoverBackground: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray200,
                        gblAppColors.NeutralWebWhite
                    ),
                    ChevronHoverFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray130
                    ),
                    Color: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray130
                    ),
                    DisabledBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray80,
                        gblAppColors.NeutralWebGray80
                    ),
                    DisabledColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray130
                    ),
                    DisabledFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    Fill: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray220,
                        gblAppColors.NeutralWebWhite
                    ),
                    FocusedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDefaultPrimary,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    FocusedBorderThickness: If(
                        gblThemeHiCo,
                        1,
                        gblThemeDark,
                        1,
                        1
                    ),
                    HoverBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray180,
                        gblAppColors.NeutralWebWhite
                    ),
                    HoverColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray130
                    ),
                    HoverFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    PressedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.TeamsDefaultPrimary,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    PressedColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray130
                    ),
                    PressedFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray180,
                        gblAppColors.NeutralWebWhite
                    ),
                    SelectionColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    SelectionFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray120,
                        gblAppColors.NeutralWebGray60
                    ),
                    Size: gblAppSizes.Font.Medium
                },
                Label: {
                    BorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    BorderThickness: 0,
                    Color: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray180
                    ),
                    DisabledBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    DisabledColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray80,
                        gblAppColors.NeutralWebGray80
                    ),
                    DisabledFill: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    Fill: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    FocusedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    FocusedBorderThickness: 0,
                    HoverBorderColor: Color.Transparent,
                    HoverColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    HoverFill: Color.Transparent,
                    PressedBorderColor: Color.Transparent,
                    PressedColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray40,
                        gblAppColors.NeutralWebGray150
                    ),
                    PressedFill: Color.Transparent,
                    Size: {
                        Small: gblAppSizes.Font.Small,
                        Medium: gblAppSizes.Font.Medium,
                        Large: gblAppSizes.Font.Large,
                        ExtraLarge: gblAppSizes.Font.ExtraLarge
                    }
                },
                HTML: {
                    BorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    BorderThickness: 0,
                    Color: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray180
                    ),
                    DisabledBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    DisabledFill: Color.Transparent,
                    Fill: Color.Transparent,
                    HoverBorderColor: Color.Transparent,
                    Size: {
                        Small: gblAppSizes.Font.Small,
                        Medium: gblAppSizes.Font.Medium,
                        Large: gblAppSizes.Font.Large,
                        ExtraLarge: gblAppSizes.Font.ExtraLarge
                    }
                },
                TextInput: {
                    BorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    BorderThickness: If(
                        gblThemeHiCo,
                        1,
                        gblThemeDark,
                        0,
                        0
                    ),
                    Color: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray180
                    ),
                    DisabledBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray80,
                        gblAppColors.NeutralWebGray80
                    ),
                    DisabledColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray130,
                        gblAppColors.NeutralWebGray130
                    ),
                    DisabledFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray150,
                        gblAppColors.NeutralWebGray30
                    ),
                    Fill: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray220,
                        gblAppColors.NeutralWebWhite
                    ),
                    FocusedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDefaultPrimary,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    FocusedBorderThickness: If(
                        gblThemeHiCo,
                        1,
                        gblThemeDark,
                        1,
                        1
                    ),
                    HoverBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray140,
                        gblAppColors.NeutralWebGray40
                    ),
                    HoverColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    HoverFill: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray140,
                        gblAppColors.NeutralWebGray40
                    ),
                    PressedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray120,
                        gblAppColors.NeutralWebGray60
                    ),
                    PressedColor: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    PressedFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray120,
                        gblAppColors.NeutralWebGray60
                    ),
                    RadiusBottomLeft: 2,
                    RadiusBottomRight: 2,
                    RadiusTopLeft: 2,
                    RadiusTopRight: 2,
                    Size: gblAppSizes.Font.Medium
                },
                Toggle: {
                    BorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    BorderThickness: If(
                        gblThemeHiCo,
                        0,
                        gblThemeDark,
                        0,
                        0
                    ),
                    Color: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebWhite,
                        gblAppColors.NeutralWebGray190
                    ),
                    DisabledBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray80,
                        gblAppColors.NeutralWebGray80
                    ),
                    DisabledColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastDisabled,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray80,
                        gblAppColors.NeutralWebGray80
                    ),
                    FalseFill: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebWhite,
                        gblThemeDark,
                        gblAppColors.NeutralWebBlack,
                        gblAppColors.NeutralWebWhite
                    ),
                    FalseHoverFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastHyperlinks,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray210,
                        gblAppColors.NeutralWebWhite
                    ),
                    FocusedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.TeamsDefaultPrimary,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    FocusedBorderThickness: If(
                        gblThemeHiCo,
                        1,
                        gblThemeDark,
                        1,
                        1
                    ),
                    HandleFillTrue: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray180,
                        gblAppColors.NeutralWebWhite
                    ),
                    HandleFillFalse: If(
                        gblThemeHiCo,
                        gblAppColors.NeutralWebBlack,
                        gblThemeDark,
                        gblAppColors.NeutralWebGray60,
                        gblAppColors.NeutralWebGray140
                    ),
                    HoverBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    PressedBorderColor: If(
                        gblThemeHiCo,
                        gblAppColors.OverlayTransparent,
                        gblThemeDark,
                        gblAppColors.OverlayTransparent,
                        gblAppColors.OverlayTransparent
                    ),
                    Size: gblAppSizes.Font.Medium,
                    TrueFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.MessagesDarkWebSuccessIcon,
                        gblAppColors.TeamsDefaultPrimary
                    ),
                    TrueHoverFill: If(
                        gblThemeHiCo,
                        gblAppColors.HighContrastSelectedBackground,
                        gblThemeDark,
                        gblAppColors.MessagesDarkWebSuccessIcon,
                        gblAppColors.TeamsDefaultPrimary
                    )
                }
            }
        );
        // APP LOADING
        // Trigger the loading timer to start
        UpdateContext({locStartTimer: true});

    conLoading_HiddenHelper As groupContainer:
        Height: =Parent.Height
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =1

        lblHiddenAppWidthForVariable As label:
            Font: =Font.'Segoe UI'
            Height: =0
            Size: =7
            Text: |-
                =Concatenate(
                    Text(App.Width),
                    Char(10),
                    Coalesce(
                        Param("hostClientType"),
                        "hostClientType null"
                    )
                )
            Width: =0
            X: =200
            Y: =0*0
            ZIndex: =1

        btnRandomizeSampleData As button:
            Height: =0
            OnSelect: |-
                =// User Record
                With(
                    {
                        varUserRecord: Filter(
                            Users,
                            'Users (Views)'.'My User Record'
                        )
                    },
                    // Uses built-in system view that defines the current user, and sets using Lookup, as best practice
                    Set(
                        gblUserRecord,
                        LookUp(
                            varUserRecord,
                            true
                        )
                    )
                );
                // Get local collections for sample data
                Concurrent(
                    ClearCollect(
                        colSampleDataUsers,
                        Filter(
                            Users,
                            'Users (Views)'.'Full Access Users',
                            Users[@User] <> gblUserRecord[@User],
                            'Full Name' <> "CdpFirstName CdpLastName",
                            'Full Name' <> "SYSTEM"
                        )
                    ),
                    ClearCollect(
                        colSampleDataIdeas,
                        Filter(
                            'Employee Ideas',
                            'Employee Ideas'[@'Campaign Status'] = 'Employee Idea Campaign Status'.Active
                        )
                    )
                );
                // Build Collection with random owner for Idea, 20% current user, else random
                Clear(colCdsSampleDataIdeaUsers);
                ForAll(
                    colSampleDataIdeas,
                    Collect(
                        colCdsSampleDataIdeaUsers,
                        {
                            appRefIdea: ThisRecord,
                            appRefUser: If(
                                Rand() < .20,
                                gblUserRecord,
                                Coalesce(
                                    First(Shuffle(colSampleDataUsers)),
                                    gblUserRecord
                                )
                            )
                        }
                    )
                );
                // Random Ideas and Users, for voting
                UpdateContext(
                    {
                        locRandomIdea1: First(Shuffle(colSampleDataIdeas)),
                        locRandomIdea2: First(Shuffle(colSampleDataIdeas)),
                        locRandomIdea3: First(Shuffle(colSampleDataIdeas)),
                        locRandomUser1: First(Shuffle(colSampleDataUsers)),
                        locRandomUser2: First(Shuffle(colSampleDataUsers)),
                        locRandomVote1: CountRows(colSampleDataUsers) > 0,
                        locRandomVote2: CountRows(colSampleDataUsers) > 1
                    }
                );
                // Three Random Ideas,with 3,2,1 Votes from Current User / Two Random Users (if they exist)
                Concurrent(
                    // Idea 1, Current User
                    Relate(
                        gblUserRecord.'Employee Ideas (msft_employeeidea_systemuser_vote)',
                        locRandomIdea1
                    ),
                    // Idea 1, Random User 1
                    If(
                        locRandomVote1,
                        Relate(
                            locRandomUser1.'Employee Ideas (msft_employeeidea_systemuser_vote)',
                            locRandomIdea1
                        )
                    ),
                    // Idea 1, Random User 2
                    If(
                        locRandomVote2,
                        Relate(
                            locRandomUser2.'Employee Ideas (msft_employeeidea_systemuser_vote)',
                            locRandomIdea1
                        )
                    ),
                    // Idea 1 Vote Count
                    Patch(
                        'Employee Ideas',
                        {
                            'Employee Idea': locRandomIdea1.'Employee Idea',
                            'Vote Count': If(
                                locRandomVote2,
                                3,
                                locRandomVote1,
                                2,
                                1
                            )
                        }
                    ),
                    // Idea 2, Current User
                    Relate(
                        gblUserRecord.'Employee Ideas (msft_employeeidea_systemuser_vote)',
                        locRandomIdea2
                    ),
                    // Idea 2, Random User 1
                    If(
                        locRandomVote1,
                        Relate(
                            locRandomUser1.'Employee Ideas (msft_employeeidea_systemuser_vote)',
                            locRandomIdea2
                        )
                    ),
                    // Idea 2 Vote Count
                    Patch(
                        'Employee Ideas',
                        {
                            'Employee Idea': locRandomIdea2.'Employee Idea',
                            'Vote Count': If(
                                locRandomVote1,
                                2,
                                1
                            )
                        }
                    ),
                    // Idea 3, Current User
                    Relate(
                        gblUserRecord.'Employee Ideas (msft_employeeidea_systemuser_vote)',
                        locRandomIdea3
                    ),
                    // Idea 3 Vote Count
                    Patch(
                        'Employee Ideas',
                        {
                            'Employee Idea': locRandomIdea3.'Employee Idea',
                            'Vote Count': 1
                        }
                    )
                );
                // Randomize Owners
                ForAll(
                    colCdsSampleDataIdeaUsers,
                    Patch(
                        'Employee Ideas',
                        {
                            'Employee Idea': ThisRecord.appRefIdea.'Employee Idea',
                            Owner: ThisRecord.appRefUser
                        }
                    )
                );
                // Get Data
                // EXECUTE CONCURRENT
                Concurrent(
                    // CONCURRENT 1
                    Set(
                        // User Record
                        gblUserRecord,
                        First(
                            Filter(
                                Users,
                                'Users (Views)'.'My User Record'
                            )
                        )
                    ),
                    // CONCURRENT 2
                    ClearCollect(
                        // Collect Raw Ideas, for Stats with Owner Details
                        colIdeaStats_Raw,
                        AddColumns(
                            'Employee Ideas',
                            "appOwner",
                            'Owning User'.'Full Name',
                            "appOwnerEmail",
                            'Owning User'.'User Name',
                            "appTitle",
                            Title
                        )
                    )
                );
                ClearCollect(
                    // Votes
                    colVotes,
                    AddColumns(
                        gblUserRecord.'Employee Ideas (msft_employeeidea_systemuser_vote)',
                        "appField",
                        'Employee Idea'
                    )
                );
                // Navigate
                Navigate(
                    'Campaign Summary Screen',
                    ScreenTransition.None,
                    {
                        locShowModal: true,
                        locShowSetup: true,
                        locShowPowerAppsPrompt: true
                    }
                )
            Text: ="Randomize Data"
            Tooltip: ="Hidden button to Randomize Data"
            Width: =0
            X: =200
            Y: =192
            ZIndex: =2

        galHiddenImagePreload_Ideas As gallery.galleryVertical:
            AccessibleLabel: ="Preloading Idea Images"
            DisplayMode: =DisplayMode.View
            Height: =App.Height * .5
            Items: |-
                =Table(
                    {tblImage: Idea_BikeToWork},
                    {tblImage: Idea_CheckIn},
                    {tblImage: Idea_CustomMask},
                    {tblImage: Idea_Door},
                    {tblImage: Idea_HighTech},
                    {tblImage: Idea_MaskUp},
                    {tblImage: Idea_MessyArea},
                    {tblImage: Idea_OfficeSchedule},
                    {tblImage: Idea_OutdoorMeeting},
                    {tblImage: Idea_PrepackagedFood},
                    {tblImage: Idea_SignUp},
                    {tblImage: Idea_SocialDistance},
                    {tblImage: Idea_WashHands}
                )
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =64
            Width: =100
            X: =0*0 + 1
            Y: =App.Height * .5
            ZIndex: =3

            imgHiddenPreload_Idea As image:
                Height: =16
                Image: =ThisItem.tblImage
                OnSelect: =Select(Parent)
                Width: =16
                ZIndex: =1

        galHiddenImagePreload_Campaigns As gallery.galleryVertical:
            AccessibleLabel: ="Preloading Stock Images"
            DisplayMode: =DisplayMode.View
            Height: =App.Height * .5
            Items: =colStockImages
            Layout: =Layout.Vertical
            TemplatePadding: =0
            TemplateSize: =64
            Width: =100
            X: =0*0 + 1
            Y: =0*0
            ZIndex: =4

            imgHiddenPreload_Campaign As image:
                Height: =16
                Image: =ThisItem.appStockImage
                OnSelect: =Select(Parent)
                Width: =16
                ZIndex: =1

        tmrLoadingDelay As timer:
            AutoStart: =locStartTimer
            BorderThickness: =0
            Duration: =250
            Height: =0
            OnTimerEnd: |
                =// App Settings
                Set(
                    gblRecordSettings,
                    LookUp(
                        'Employee Idea Settings',// Will get first settings record; if needed, switch to First(Filter()) or explicit lookup
                        true
                    )
                );
                If(
                    IsBlank(gblRecordSettings),
                    // Should we randomize data? Check for no Settings records, implies first run in Team
                    Set(
                        gblRandomizeData,
                        true
                    );
                    Set(
                        gblRecordSettings,
                        Patch(
                            'Employee Idea Settings',
                            Defaults('Employee Idea Settings'),
                            {
                                Name: Concatenate(
                                    MicrosoftTeams.GetTeam(gblParamTeamId).displayName,
                                    " | ",
                                    LookUp(
                                        MicrosoftTeams.GetChannelsForGroup(gblParamTeamId).value,
                                        id = gblParamChannelId
                                    ).displayName
                                ),
                                'Parameter (Team Id)': gblParamTeamId,
                                'Parameter (Channel Id)': gblParamChannelId,
                                'Team Owner Restricted?': 'Team Owner Restricted? (Employee Idea Settings)'.No
                            }
                        )
                    )
                );
                // CONCURRENT APP SETTINGS
                Concurrent(
                    // Collect User Settings CDS Record, if it exists
                    ClearCollect(
                        colUserSettings,
                        Filter(
                            'Employee Ideas User Settings',
                            'Employee Ideas User Settings (Views)'.'My Employee Ideas User Settings Record'
                        )
                    );
                    If(
                    // Record does not exist, or was not found, create and collect
                        CountRows(colUserSettings) = 0,
                        ClearCollect(
                            colUserSettings,
                            Patch(
                                'Employee Ideas User Settings',
                                Defaults('Employee Ideas User Settings'),
                                {Name: User().FullName}
                            )
                        )
                    );
                    Set(
                    // Use Oldest Record, if multiple exist
                        gblRecordUserSettings,
                        First(
                            SortByColumns(
                                colUserSettings,
                                "createdon",
                                SortOrder.Ascending
                            )
                        )
                    ),
                    Set(
                        gblUserFirstName,
                        Left(
                            User().FullName,
                            Find(
                                " ",
                                User().FullName
                            ) - 1
                        )
                    ),
                    Set(
                        gblSettingNotificationChannelId,
                        gblRecordSettings.'Parameter (Notification Channel Id)'
                    ),
                    Set(
                        gblSettingTeamId,
                        gblRecordSettings.'Parameter (Team Id)'
                    ),
                    Set(
                        gblSettingNotificationEnabled,
                        gblRecordSettings.'Is Enabled Notifications?' <> 'Is Enabled Notifications? (Employee Idea Settings)'.No
                    ),
                    // Set Global Padding
                    Set(
                        gblPadding,
                        {
                            Page: 20,
                            ButtonShape: 12,
                            ButtonText: 24,
                            Container: 32,
                            GalleryHeader: 16
                        }
                    ),
                    // Set Global Mobile Width
                    Set(
                        gblMobileWidth,
                        750
                    ),
                    // Today
                    Set(
                        gblToday,
                        Today()
                    ),
                    // App Stock Images
                    ClearCollect(
                        colStockImages,
                        {appStockImage: Blank()},
                        {appStockImage: Image_Category_BusDriverMask},
                        {appStockImage: Image_Category_Cabin},
                        {appStockImage: Image_Category_Celebration},
                        {appStockImage: Image_Category_CleanKeyboard},
                        {appStockImage: Image_Category_ConferenceRoom},
                        {appStockImage: Image_Category_Crafts},
                        {appStockImage: Image_Category_Doctors},
                        {appStockImage: Image_Category_DogAtWork},
                        {appStockImage: Image_Category_Entrance},
                        {appStockImage: Image_Category_Library},
                        {appStockImage: Image_Category_Manufactoring},
                        {appStockImage: Image_Category_Meeting},
                        {appStockImage: Image_Category_Music},
                        {appStockImage: Image_Category_Outdoors},
                        {appStockImage: Image_Category_Photography},
                        {appStockImage: Image_Category_RemoteWork},
                        {appStockImage: Image_Category_WaitingForBus},
                        {appStockImage: Image_Category_Warehouse},
                        {appStockImage: Image_Category_WFH},
                        {appStockImage: Image_Category_Workers}
                    ),
                    // App Files Icons
                    ClearCollect(
                        colFileIcons,
                        {
                            appFileType: "xls",
                            appFileIcon: Icon_File_Excel
                        },
                        {
                            appFileType: "xlsx",
                            appFileIcon: Icon_File_Excel
                        },
                        {
                            appFileType: "doc",
                            appFileIcon: Icon_File_Word
                        },
                        {
                            appFileType: "docx",
                            appFileIcon: Icon_File_Word
                        },
                        {
                            appFileType: "png",
                            appFileIcon: Icon_File_Photo
                        },
                        {
                            appFileType: "svg",
                            appFileIcon: Icon_File_Photo
                        },
                        {
                            appFileType: "jpg",
                            appFileIcon: Icon_File_Photo
                        },
                        {
                            appFileType: "jpeg",
                            appFileIcon: Icon_File_Photo
                        },
                        {
                            appFileType: "gif",
                            appFileIcon: Icon_File_Photo
                        },
                        {
                            appFileType: "zip",
                            appFileIcon: Icon_File_Zip
                        },
                        {
                            appFileType: "rar",
                            appFileIcon: Icon_File_Zip
                        },
                        {
                            appFileType: "ppt",
                            appFileIcon: Icon_File_PowerPoint
                        },
                        {
                            appFileType: "pptx",
                            appFileIcon: Icon_File_PowerPoint
                        },
                        {
                            appFileType: "webm",
                            appFileIcon: Icon_File_Video
                        },
                        {
                            appFileType: "mpg",
                            appFileIcon: Icon_File_Video
                        },
                        {
                            appFileType: "mpeg",
                            appFileIcon: Icon_File_Video
                        },
                        {
                            appFileType: "mp4",
                            appFileIcon: Icon_File_Video
                        },
                        {
                            appFileType: "avi",
                            appFileIcon: Icon_File_Video
                        },
                        {
                            appFileType: "mov",
                            appFileIcon: Icon_File_Video
                        },
                        {
                            appFileType: "mp2",
                            appFileIcon: Icon_File_Video
                        },
                        {
                            appFileType: "flv",
                            appFileIcon: Icon_File_Video
                        }
                    ),
                    // Ensure Vote Counter is Clear
                    Clear(colVoteCounter)
                );
                If(
                    !gblRandomizeData,
                    // EXECUTE CONCURRENT
                    Concurrent(
                    // CONCURRENT 1
                        Set(
                        // User Record
                            gblUserRecord,
                            First(
                                Filter(
                                    Users,
                                    'Users (Views)'.'My User Record'
                                )
                            )
                        ),
                    // CONCURRENT 2
                        ClearCollect(
                        // Collect Raw Ideas, for Stats with Owner Details
                            colIdeaStats_Raw,
                            AddColumns(
                                'Employee Ideas',
                                "appOwner",
                                'Owning User'.'Full Name',
                                "appOwnerEmail",
                                'Owning User'.'User Name',
                                "appTitle",
                                Title
                            )
                        )
                    );
                    ClearCollect(
                    // Votes
                        colVotes,
                        AddColumns(
                            gblUserRecord.'Employee Ideas (msft_employeeidea_systemuser_vote)',
                            "appField",
                            'Employee Idea'
                        )
                    );
                    
                );
                Set(
                    gblAppManager,
                    If(
                        gblRecordSettings.'Team Owner Restricted?' = 'Team Owner Restricted? (Employee Idea Settings)'.Yes,
                        Param("userTeamRole") = "0" Or tglAdmin_Owner.Value,//Studio Testing
                        true
                    )
                );
                If(
                    gblAppLoaded,
                    If(
                        gblRandomizeData,
                        Select(btnRandomizeSampleData),// First Run
                        Or(
                            Param("hostClientType") = "android",
                            (Param("hostClientType") = "ios" And Parent.Width < 800),
                            tglAdmin_Mobile.Value// Studio Testing
                        ),// Mobile
                        Navigate(
                            'Mobile Landing Screen',
                            ScreenTransition.None,
                            {locShowSetup: IsBlank(gblSettingNotificationChannelId)}
                        ),
                        Navigate(
                            'Campaign Summary Screen',
                            ScreenTransition.None,
                            {
                                locShowModal: (IsBlank(gblSettingNotificationChannelId)) Or (gblRecordUserSettings.'Display Splash (Power Apps)?' = 'Display Splash (Power Apps)? (Employee Ideas User Settings)'.Yes),
                                locShowSetup: IsBlank(gblSettingNotificationChannelId),
                                locShowPowerAppsPrompt: gblRecordUserSettings.'Display Splash (Power Apps)?' = 'Display Splash (Power Apps)? (Employee Ideas User Settings)'.Yes
                            }
                        )
                    )
                );
            Repeat: =!gblAppLoaded
            TabIndex: =-1
            Width: =0
            X: =200
            Y: =40
            ZIndex: =6

    conLoading_Visible As groupContainer:
        Fill: |-
            =Switch(
                Param("theme"),
                "contrast",
                Color.Black,
                "dark",
                ColorValue("#201F1E"), // NeutralWebGray180
                ColorValue("#F3F2F1") // NeutralWebGray20
            )
        Height: =Parent.Height
        Width: =Parent.Width
        X: =0*0
        Y: =0*0
        ZIndex: =2

        lblLoadingTextSettingUp As label:
            Align: =Align.Center
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: |
                =// Non-variable colors, while variable is established
                Switch(
                    Param("theme"),
                    "contrast",
                    Color.White,
                    "dark",
                    Color.White,
                    ColorValue("#252423") // NeutralWebGray190
                )
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            DisplayMode: =DisplayMode.View
            Fill: =Color.Transparent
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =Parent.Height - Self.Y
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =10.5
            Text: |-
                =With(
                    {
                        varDefault: "This is the first time this app has been run.
                Setting up a few things.",
                        varOOBTextId: "lblLoadingTextSettingUp__locText"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            VerticalAlign: =VerticalAlign.Top
            Visible: =gblRandomizeData
            Width: =lblLoadingText_BuiltWith.Width
            X: =lblLoadingText_BuiltWith.X
            Y: =galLoadingLogos.Y + galLoadingLogos.Height
            ZIndex: =1

        lblLoadingText_AppName As label:
            Align: =Align.Center
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: |
                =// Non-variable colors, while variable is established
                Switch(
                    Param("theme"),
                    "contrast",
                    Color.White,
                    "dark",
                    Color.White,
                    ColorValue("#252423") // NeutralWebGray190
                )
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            DisplayMode: =DisplayMode.View
            Fill: =Color.Transparent
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Semibold
            Height: =48
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =17
            Text: |-
                =With(
                    {
                        varDefault: "Manage ideas",
                        varOOBTextId: "_translateCommon__AppNameManageIdeas"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =imgLoadingAppIcon.Width
            X: =imgLoadingAppIcon.X
            Y: =imgLoadingAppIcon.Y + imgLoadingAppIcon.Height + 16
            ZIndex: =4

        imgLoadingAppIcon As image:
            AccessibleLabel: =lblLoadingText_AppName.Text
            Height: =160
            Image: =Logo_MSFTOakdaleApps
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Width: =300
            X: =(Parent.Width - Self.Width) / 2
            Y: =((Parent.Height - Self.Height) / 2) - 48
            ZIndex: =5

        galLoadingLogos As gallery.galleryHorizontal:
            AccessibleLabel: ="Power Platform Logos"
            DisplayMode: =DisplayMode.View
            Height: =88*1
            Items: |-
                =Table(
                    {fieldLogo: PowerAppsLogo},
                    {fieldLogo: PowerAutomateLogo},
                    {fieldLogo: PVALogo}
                )
            TemplatePadding: =20
            TemplateSize: =48
            Width: =((Self.TemplateWidth + Self.TemplatePadding) * 3) + Self.TemplatePadding
            X: =(Parent.Width - Self.Width) / 2
            Y: =Parent.Height - Self.Height - 40
            ZIndex: =6

            imgLoadingLogo_Background As circle:
                Fill: =Color.White
                Height: =Self.Width
                OnSelect: =Select(Parent)
                Width: =Parent.TemplateWidth
                X: =0*0
                Y: =0*0
                ZIndex: =1

            imgLoadingLogo_Icon As image:
                Height: =Self.Width
                Image: =ThisItem.fieldLogo
                OnSelect: =Select(Parent)
                PaddingBottom: =2
                PaddingLeft: =2
                PaddingRight: =2
                PaddingTop: =2
                Width: =Parent.TemplateWidth * .7
                X: =(Parent.TemplateWidth - Self.Width) / 2
                Y: =Self.X
                ZIndex: =2

        lblLoadingText_BuiltWith As label:
            Align: =Align.Center
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: |
                =// Non-variable colors, while variable is established
                Switch(
                    Param("theme"),
                    "contrast",
                    Color.White,
                    "dark",
                    Color.White,
                    ColorValue("#252423") // NeutralWebGray190
                )
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            DisplayMode: =DisplayMode.View
            Fill: =Color.Transparent
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            FontWeight: =FontWeight.Lighter
            Height: =32
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =10.5//gblAppStyles.Label.Size.Medium
            Text: |-
                =With(
                    {
                        varDefault: "Built with Microsoft Power Platform",
                        varOOBTextId: "_translateCommon__BuiltWithPowerPlatform"
                    },
                    With(
                        {
                            varLocalizedText: LookUp(
                                colLocalization,
                                OOBTextId = varOOBTextId,
                                LocalizedText
                            )
                        },
                        Coalesce(
                            varLocalizedText,
                            varDefault
                        )
                    )
                )
            Width: =imgLoadingAppIcon.Width
            X: =imgLoadingAppIcon.X
            Y: =Parent.Height - Self.Height - 20
            ZIndex: =7

        lblLoadingText_GettingThingsReady As label:
            Align: =Align.Center
            BorderColor: =gblAppStyles.Label.BorderColor
            BorderThickness: =gblAppStyles.Label.BorderThickness
            Color: |
                =// Non-variable colors, while variable is established
                Switch(
                    Param("theme"),
                    "contrast",
                    Color.White,
                    "dark",
                    Color.White,
                    ColorValue("#252423") // NeutralWebGray190
                )
            DisabledBorderColor: =gblAppStyles.Label.DisabledBorderColor
            DisabledColor: =gblAppStyles.Label.DisabledColor
            DisabledFill: =gblAppStyles.Label.DisabledFill
            DisplayMode: =DisplayMode.View
            Fill: =Color.Transparent
            FocusedBorderColor: =gblAppStyles.Label.FocusedBorderColor
            FocusedBorderThickness: =gblAppStyles.Label.FocusedBorderThickness
            Font: =Font.'Segoe UI'
            HoverBorderColor: =gblAppStyles.Label.HoverBorderColor
            HoverColor: =gblAppStyles.Label.HoverColor
            HoverFill: =gblAppStyles.Label.HoverFill
            PressedBorderColor: =gblAppStyles.Label.PressedBorderColor
            PressedColor: =gblAppStyles.Label.PressedColor
            PressedFill: =gblAppStyles.Label.PressedFill
            Size: =10.5//gblAppStyles.Label.Size.Medium
            Text: |-
                =If(
                    gblRandomizeData,
                    With(
                        {
                            varDefault: "This is the first time this app has been run.
                Setting up a few things.",
                            varOOBTextId: "lblLoadingTextSettingUp__locText"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    ),
                    With(
                        {
                            varDefault: "Getting things ready...",
                            varOOBTextId: "_translateCommon__GettingThingsReady"
                        },
                        With(
                            {
                                varLocalizedText: LookUp(
                                    colLocalization,
                                    OOBTextId = varOOBTextId,
                                    LocalizedText
                                )
                            },
                            Coalesce(
                                varLocalizedText,
                                varDefault
                            )
                        )
                    )
                )
            Width: =imgLoadingAppIcon.Width
            X: =imgLoadingAppIcon.X
            Y: =lblLoadingText_AppName.Y + lblLoadingText_AppName.Height
            ZIndex: =8

